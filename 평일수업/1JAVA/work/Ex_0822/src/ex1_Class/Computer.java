package ex1_Class;

// 클래스의 종류
// 1. main이 들어 있는 실행용 클래스
// 2. 다른 클래스에서 사용하기 위한 참조 클래스

public class Computer {
	// 클래스의 구성 요소
	// 1. 멤버(필드, 속성) 변수, 객체
	// 2. 메소드(함수, 기능)
	// 3. 생성자

	int ssd = 1024;
	int ram = 64;
	float cpu = 4.8f;
	String color = "white";
	
	//컴퓨터 정보를 출력하는 함수 만들기
	
	//메서드란? 어떤 작업을 수행하기 위한 명령문의 집합
	//메서드를 사용하는 가장 큰 이유는 반복적으로 사용되는 코드를 줄이기 위해서 (모듈화)
    //필요한 내용의 코드를 메서드로 작성해두고 필요할 때마다 호출만 하면 된다
	public void getInfo() {
		System.out.println("cpu : " + this.cpu+"Hz");
		System.out.println("ssd : " + this.ssd+"GB");
		System.out.println("ram : " + this.ram+"GB");
		System.out.println("color : " + this.color);
		System.out.println("--------------------");
	}
	
	// 함수는 크게 두 가지 부분으로 나눌 수 있다.
	// 1. 선언부 : 함수의 기능이 정의되어있다.
	// 2. 호출부 : 함수를 사용하기 위해 호출하는 부분.
	
	// 함수의 선언은 함수 안에서 할 수 없다.
	// 함수의 호출은 함수 안에서만 해야한다.
	
	//함수의 기본형
	//접근제한자 반환형 함수명(매개변수1,매개변수2...){
	//	함수에 들어갈 명령;
	//	return 반환값;
	//}
	
	//접근제한자
	//소스코드에 접근할 수 있는 범위를 설정
	//1. public : 모든 접근을 허용
	//2. private : 현재 클래스의 객체에서만 사용을 허가
	//3. protected : 상속관계의 객체들에만 허가
	//4. default : 같은 패키지 내의 객체에만 사용을 허가
	
	//반환형 처음부터 끝까지 수행을 마친 뒤 반환해야할 값이 있을 경우
	//int, float과 같은 기본자료형 뿐만 아니라 String 객체도 반환이 가능하고
	//반환할 게 없을 경우 void
	//반환값의 자요형과 일치해야 한다.
	
	//함수명
	//첫 글자는 소문자로 시작한다.
	
	//파라미터(매개변수)
	//외부에서 값을 받아야 한다면(함수를 호출할 때 값을 보내겠다.)
	//그 특정 값을 받아서 함수 내에서 사용할 수 있는 변수
	
	
	
	
}
